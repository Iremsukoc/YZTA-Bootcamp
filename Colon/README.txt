# Colon Kanseri SÄ±nÄ±flandÄ±rma Modeli

Bu klasÃ¶r, kolon kanseri gÃ¶rÃ¼ntÃ¼lerini sÄ±nÄ±flandÄ±rmak iÃ§in eÄŸitilmiÅŸ bir derin Ã¶ÄŸrenme modelini ve tahmin scriptlerini iÃ§erir. Model, iki sÄ±nÄ±f arasÄ±nda ayrÄ±m yapar:

- `Colon_adenocarcinoma`
- `Colon_benign_tissue`

## ğŸ”§ Dosya YapÄ±sÄ±
Colon/
â”œâ”€â”€ model_cnn.h5 # EÄŸitilmiÅŸ Keras modeli
â”œâ”€â”€ test_split_colon/ # Test gÃ¶rsellerinin bulunduÄŸu klasÃ¶r
â”‚ â”œâ”€â”€ Colon_adenocarcinoma/
â”‚ â””â”€â”€ Colon_benign_tissue/
â”œâ”€â”€ utils.py # GÃ¶rÃ¼ntÃ¼ iÅŸleme ve tahmin fonksiyonlarÄ±
â”œâ”€â”€ predict.py # Modeli kullanarak gÃ¶rsel sÄ±nÄ±flandÄ±rma yapan script
â””â”€â”€ README.md # AÃ§Ä±klama dosyasÄ± (bu dosya)


## ğŸ“¦ Gerekli KÃ¼tÃ¼phaneler

- TensorFlow
- Pillow (gÃ¶rsel iÅŸleme)
- NumPy

Sanal ortam (Anaconda) kullanÄ±lmasÄ± Ã¶nerilir.

```bash
conda create --name cancer-ai-env python=3.10
conda activate cancer-ai-env
pip install tensorflow pillow numpy

KullanÄ±m
1-OrtamÄ± aktif hale getir:
    conda activate cancer-ai-env
2-KlasÃ¶re git:
    cd Colon
3-Tahmin yapmak iÃ§in script'i Ã§alÄ±ÅŸtÄ±r:
    python predict.py

Script AÃ§Ä±klamalarÄ±
utils.py:
GÃ¶rselleri modele uygun hale getirmek (yeniden boyutlandÄ±rma, normalize etme vb.) ve tahmin iÅŸlemleri iÃ§in yardÄ±mcÄ± fonksiyonlarÄ± iÃ§erir.

predict.py:

Modeli yÃ¼kler (model_cnn.h5)

Test gÃ¶rselini iÅŸler (test_split_colon/...)

Tahmin yapar ve sonucu ekrana yazdÄ±rÄ±r

Notlar
Test iÃ§in Ã¶rnek gÃ¶rsel yolu predict.py iÃ§inde sabit olarak verilmiÅŸtir. FarklÄ± bir gÃ¶rsel test etmek istersen image_path satÄ±rÄ±nÄ± deÄŸiÅŸtirmen yeterlidir.

KlasÃ¶r isimleri ve model adÄ± farklÄ±ysa predict.py iÃ§inde gÃ¼ncelleme yapman gerekir.

Fonksiyon AÃ§Ä±klamalarÄ± (utils.py)
1. transform_image(uploaded_image, target_size=(224, 224))
AmaÃ§:
YÃ¼klenen bir gÃ¶rseli derin Ã¶ÄŸrenme modeline uygun hale getirir.

Ä°ÅŸlem adÄ±mlarÄ±:

GÃ¶rseli RGB formatÄ±na dÃ¶nÃ¼ÅŸtÃ¼rÃ¼r (siyah-beyaz vs. karÄ±ÅŸmasÄ±n diye).

Belirtilen boyuta (224x224) yeniden boyutlandÄ±rÄ±r (modelin giriÅŸ boyutu).

GÃ¶rseli NumPy arrayâ€™e Ã§evirir.

Piksel deÄŸerlerini 0-1 aralÄ±ÄŸÄ±na normalize eder (/255.0).

Ekstra bir boyut ekler (batch dimension: [1, 224, 224, 3])

KullanÄ±ldÄ±ÄŸÄ± yer:
predict.py iÃ§inde test gÃ¶rseli bu fonksiyonla iÅŸlenir.

2. predict_image(model, img_array, class_names)
AmaÃ§:
Ä°ÅŸlenmiÅŸ bir gÃ¶rsel Ã¼zerinden tahmin yapar.

Ä°ÅŸlem adÄ±mlarÄ±:

model.predict(...) ile sÄ±nÄ±f olasÄ±lÄ±klarÄ±nÄ± alÄ±r.

En yÃ¼ksek olasÄ±lÄ±ÄŸa sahip sÄ±nÄ±fÄ±n indexâ€™ini bulur (np.argmax()).

Indexâ€™e karÅŸÄ±lÄ±k gelen sÄ±nÄ±f adÄ±nÄ± class_names listesinden Ã§eker.

O sÄ±nÄ±fa ait olasÄ±lÄ±ÄŸÄ± da gÃ¼ven oranÄ± (confidence) olarak verir.

DÃ¶ndÃ¼rdÃ¼ÄŸÃ¼:

Tahmin edilen sÄ±nÄ±f etiketi (string)

GÃ¼ven oranÄ± (float)

KullanÄ±ldÄ±ÄŸÄ± yer:
predict.py iÃ§inde model tahmini bu fonksiyonla yapÄ±lÄ±r.